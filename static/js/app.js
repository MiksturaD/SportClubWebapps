// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;
tg.ready();
tg.expand();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentUser = null;
let sportGroups = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    initApp();
});

async function initApp() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
        const userData = tg.initDataUnsafe?.user || {
            id: 123456789, // –¢–µ—Å—Ç–æ–≤—ã–π ID –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            username: 'test_user',
            first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
            last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const response = await fetch('/api/init', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(userData)
        });

        const result = await response.json();
        
        if (result.success) {
            currentUser = result.user;
            showUserPanel();
            loadSportGroups();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π
            if (currentUser.role === 'parent') {
                checkAuthorization();
            }
        } else {
            showError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }
}

function showUserPanel() {
    if (currentUser.role === 'admin') {
        document.getElementById('adminPanel').style.display = 'block';
    } else {
        document.getElementById('parentPanel').style.display = 'block';
    }
}

async function loadSportGroups() {
    try {
        const response = await fetch('/api/sport-groups');
        const result = await response.json();
        
        if (result.success) {
            sportGroups = result.groups;
            renderSportGroups();
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø');
    }
}

function renderSportGroups() {
    const container = document.getElementById('sportGroups');
    
    if (sportGroups.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø</div>';
        return;
    }

    container.innerHTML = sportGroups.map(group => `
        <div class="sport-group-card">
            <div class="group-content" onclick="openGroupDetails(${group.id})">
                <h3>${group.name}</h3>
                <p>${group.description}</p>
            </div>
            ${currentUser && currentUser.role === 'admin' ? `
                <div class="group-actions">
                    <button class="btn btn-secondary" onclick="showGroupStudents(${group.id}, '${group.name}')">üë• –£—á–µ–Ω–∏–∫–∏</button>
                </div>
            ` : ''}
        </div>
    `).join('');
}

function openGroupDetails(groupId) {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥—Ä—É–ø–ø–µ
    window.location.href = `/group/${groupId}?id=${groupId}`;
}



// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function showModal(modalId) {
    document.getElementById(modalId).style.display = 'block';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    if (modalId === 'scheduleModal') {
        loadScheduleData();
    } else if (modalId === 'paymentsModal') {
        loadPaymentsData();
    } else if (modalId === 'studentsModal') {
        loadStudentsData();
    } else if (modalId === 'contactModal') {
        loadContactData();
    } else if (modalId === 'paymentModal') {
        loadPaymentData().then(() => {
            loadFinancialInfo();
        });
    } else if (modalId === 'discountsModal') {
        loadDiscounts();
        toggleDiscountFormForRole();
    } else if (modalId === 'attendanceModal') {
        loadAttendanceGroups();
    } else if (modalId === 'parentAttendanceModal') {
        loadParentAttendance();
    } else if (modalId === 'authorizationModal') {
        loadAuthorizedParticipants();
    } else if (modalId === 'participantsModal') {
        loadParticipantGroups();
    }
}

function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}
// –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏
async function loadDiscounts() {
    try {
        const response = await fetch('/api/discounts');
        const result = await response.json();
        const container = document.getElementById('discountsList');
        if (!container) return;
        if (result.success) {
            if (result.discounts.length === 0) {
                container.innerHTML = '<p>–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</p>';
                return;
            }
            container.innerHTML = `
                <h4>–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:</h4>
                ${result.discounts.map(d => `
                    <div class="schedule-item">
                        <div class="schedule-day">${d.name} ‚Äî ${d.discount_percent}%</div>
                        <div class="schedule-time">${d.discount_type}${formatDiscountDates(d)}</div>
                        ${currentUser?.role === 'admin' ? `<div style="margin-top:8px;"><button class="btn btn-secondary" onclick="deleteDiscount(${d.id})">–£–¥–∞–ª–∏—Ç—å</button></div>` : ''}
                    </div>
                `).join('')}
            `;
        } else {
            container.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–∏–¥–æ–∫</div>';
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–∏–¥–æ–∫', e);
        const container = document.getElementById('discountsList');
        if (container) container.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–∏–¥–æ–∫</div>';
    }
}

function formatDiscountDates(d) {
    const parts = [];
    if (d.start_date) parts.push(` c ${d.start_date}`);
    if (d.end_date) parts.push(` –ø–æ ${d.end_date}`);
    return parts.length ? ` (${parts.join('')})` : '';
}

function toggleDiscountFormForRole() {
    const form = document.getElementById('discountForm');
    if (!form) return;
    if (currentUser && currentUser.role === 'admin') {
        form.style.display = 'block';
    } else {
        form.style.display = 'none';
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)
document.getElementById('discountForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const payload = {
        name: document.getElementById('discountName').value,
        description: document.getElementById('discountDescription').value,
        discount_type: document.getElementById('discountTypeAdmin').value,
        discount_percent: parseInt(document.getElementById('discountPercentAdmin').value),
        start_date: document.getElementById('discountStartDate').value || null,
        end_date: document.getElementById('discountEndDate').value || null,
        is_active: true
    };
    try {
        const response = await fetch('/api/admin/discounts', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        });
        const result = await response.json();
        if (result.success) {
            showSuccess('–°–∫–∏–¥–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
            this.reset();
            loadDiscounts();
        } else {
            showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ' + result.error);
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏', e);
        showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏');
    }
});

async function deleteDiscount(id) {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —Å–∫–∏–¥–∫—É?')) return;
    try {
        const response = await fetch(`/api/admin/discounts/${id}`, { method: 'DELETE' });
        const result = await response.json();
        if (result.success) {
            showSuccess('–°–∫–∏–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∞');
            loadDiscounts();
        } else {
            showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + result.error);
        }
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏', e);
        showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏');
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
window.onclick = function(event) {
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
async function loadScheduleData() {
    try {
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–µ–ª–µ–∫—Ç –≥—Ä—É–ø–ø–∞–º–∏
        const scheduleGroupSelect = document.getElementById('scheduleGroup');
        scheduleGroupSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option>' +
            sportGroups.map(group => `<option value="${group.id}">${group.name}</option>`).join('');

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        const response = await fetch('/api/admin/schedule');
        const result = await response.json();
        
        const scheduleList = document.getElementById('scheduleList');
        if (result.success) {
            if (result.schedules.length > 0) {
                scheduleList.innerHTML = `
                    <h4>–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</h4>
                    ${result.schedules.map(s => `
                        <div class="schedule-item">
                            <div class="schedule-day">${s.sport_group_name}</div>
                            <div class="schedule-time">${getDayName(s.day_of_week)} ${s.start_time} - ${s.end_time}</div>
                        </div>
                    `).join('')}
                `;
            } else {
                scheduleList.innerHTML = '<h4>–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</h4><p>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</p>';
            }
        } else {
            scheduleList.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
async function loadPaymentsData() {
    try {
        const response = await fetch('/api/admin/payments');
        const result = await response.json();
        
        const paymentsList = document.getElementById('paymentsList');
        if (result.success) {
            if (result.payments.length > 0) {
                paymentsList.innerHTML = `
                    <h4>–°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–µ–∂–µ–π:</h4>
                    ${result.payments.map(p => `
                        <div class="schedule-item payment-item ${p.status}">
                            <div class="payment-header">
                                <div class="payment-participant">${p.participant_name}</div>
                                <div class="payment-status ${p.status}">${getStatusText(p.status)}</div>
                            </div>
                            <div class="payment-details">
                                <div>üì± ${p.participant_phone}</div>
                                <div>üèÉ‚Äç‚ôÇÔ∏è ${p.sport_group} ‚Äî ${p.subscription_type}</div>
                                <div>üí∞ ${p.amount} ‚ÇΩ (${p.payment_method})</div>
                                <div>üìÖ –°–æ–∑–¥–∞–Ω: ${p.created_at}</div>
                                ${p.payment_date ? `<div>‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: ${p.payment_date}</div>` : ''}
                                ${p.admin_notes ? `<div>üìù –ó–∞–º–µ—Ç–∫–∞: ${p.admin_notes}</div>` : ''}
                            </div>
                            ${p.status === 'pending' ? `
                                <div class="payment-actions">
                                    <button class="btn btn-success" onclick="approvePayment(${p.id})">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
                                    <button class="btn btn-danger" onclick="rejectPayment(${p.id})">‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å</button>
                                </div>
                            ` : ''}
                        </div>
                    `).join('')}
                `;
            } else {
                paymentsList.innerHTML = '<p>–ü–ª–∞—Ç–µ–∂–µ–π –ø–æ–∫–∞ –Ω–µ—Ç</p>';
            }
        } else {
            paymentsList.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π:', error);
        document.getElementById('paymentsList').innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π</div>';
    }
}

function getStatusText(status) {
    switch (status) {
        case 'pending': return '‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è';
        case 'approved': return '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω';
        case 'rejected': return '‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω';
        default: return status;
    }
}

async function approvePayment(paymentId) {
    const adminNotes = prompt('–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):');
    
    try {
        const response = await fetch(`/api/admin/payments/${paymentId}/approve`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ admin_notes: adminNotes || '' })
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω');
            loadPaymentsData(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        } else {
            showError('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
        showError('–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    }
}

async function rejectPayment(paymentId) {
    const adminNotes = prompt('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:');
    if (!adminNotes) {
        showError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è');
        return;
    }
    
    try {
        const response = await fetch(`/api/admin/payments/${paymentId}/reject`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ admin_notes: adminNotes })
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω');
            loadPaymentsData(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        } else {
            showError('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
        showError('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É—á–µ–Ω–∏–∫–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã
async function showGroupStudents(groupId, groupName) {
    try {
        const response = await fetch(`/api/admin/group/${groupId}/students`);
        const result = await response.json();
        
        if (result.success) {
            // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            const modalHtml = `
                <div class="modal" id="groupStudentsModal" style="display: block;">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">üë• –£—á–µ–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã: ${groupName}</h3>
                            <button class="close-btn" onclick="closeGroupStudentsModal()">&times;</button>
                        </div>
                        <div id="groupStudentsList">
                            ${renderGroupStudents(result.students, groupName)}
                        </div>
                    </div>
                </div>
            `;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ body
            document.body.insertAdjacentHTML('beforeend', modalHtml);
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã');
    }
}

function closeGroupStudentsModal() {
    const modal = document.getElementById('groupStudentsModal');
    if (modal) {
        modal.remove();
    }
}

function renderGroupStudents(students, groupName) {
    if (students.length === 0) {
        return '<p>–í —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ –ø–æ–∫–∞ –Ω–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ —Å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏</p>';
    }
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä—É–ø–ø—ã
    const totalStudents = students.length;
    const totalPaid = students.reduce((sum, student) => sum + student.total_paid, 0);
    const totalRemaining = students.reduce((sum, student) => sum + student.remaining_lessons, 0);
    
    return `
        <div class="group-statistics">
            <h4>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã "${groupName}":</h4>
            <div class="stats-grid">
                <div class="stat-item">
                    <div class="stat-number">${totalStudents}</div>
                    <div class="stat-label">–£—á–µ–Ω–∏–∫–æ–≤</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">${totalPaid.toLocaleString()} ‚ÇΩ</div>
                    <div class="stat-label">–û–ø–ª–∞—á–µ–Ω–æ</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">${totalRemaining}</div>
                    <div class="stat-label">–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–π</div>
                </div>
            </div>
        </div>
        <h4>–°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ (${students.length}):</h4>
        ${students.map(student => `
            <div class="student-item">
                <div class="student-header">
                    <div class="student-name">${student.participant_name}</div>
                    <div class="student-phone">üì± ${student.parent_phone}</div>
                </div>
                <div class="student-info">
                    <div>üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${student.birth_date}</div>
                    ${student.medical_certificate ? '<div>üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞: ‚úÖ</div>' : '<div>üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞: ‚ùå</div>'}
                    ${student.discount_type ? `<div>üé´ –°–∫–∏–¥–∫–∞: ${student.discount_type} (${student.discount_percent}%)</div>` : ''}
                </div>
                <div class="student-financial">
                    <div class="financial-summary">
                        <span>üí∞ –û–ø–ª–∞—á–µ–Ω–æ: ${student.total_paid} ‚ÇΩ</span>
                        <span>üìö –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–π: <span class="balance-remaining ${getBalanceClass(student.remaining_lessons)}">${student.remaining_lessons}</span></span>
                        <span>üìÖ –¢–∏–ø –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞: ${student.subscription_type}</span>
                    </div>
                </div>
            </div>
        `).join('')}
    `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async function loadStudentsData() {
    try {
        const response = await fetch('/api/admin/students');
        const result = await response.json();
        const studentsList = document.getElementById('studentsList');
        
        if (result.success) {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —É—á–µ–Ω–∏–∫–æ–≤ —Å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
            const studentsWithPaidSubscriptions = result.students.filter(student => student.total_paid_all > 0);
            
            if (studentsWithPaidSubscriptions.length > 0) {
                // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                const totalStudents = studentsWithPaidSubscriptions.length;
                const totalPaid = studentsWithPaidSubscriptions.reduce((sum, student) => sum + student.total_paid_all, 0);
                const totalRemaining = studentsWithPaidSubscriptions.reduce((sum, student) => sum + student.total_remaining_all, 0);
                const totalSubscriptions = studentsWithPaidSubscriptions.reduce((sum, student) => sum + student.subscription_count, 0);
                const studentsWithMedical = studentsWithPaidSubscriptions.filter(student => student.medical_certificate).length;
                const studentsWithDiscount = studentsWithPaidSubscriptions.filter(student => student.discount_type).length;
                
                studentsList.innerHTML = `
                    <div class="statistics-summary">
                        <h4>üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4>
                        <div class="stats-grid">
                            <div class="stat-item">
                                <div class="stat-number">${totalStudents}</div>
                                <div class="stat-label">–í—Å–µ–≥–æ —É—á–µ–Ω–∏–∫–æ–≤</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">${totalPaid.toLocaleString()} ‚ÇΩ</div>
                                <div class="stat-label">–û–±—â–∞—è –æ–ø–ª–∞—Ç–∞</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">${totalRemaining}</div>
                                <div class="stat-label">–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–π</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">${totalSubscriptions}</div>
                                <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">${studentsWithMedical}</div>
                                <div class="stat-label">–° –º–µ–¥. —Å–ø—Ä–∞–≤–∫–æ–π</div>
                            </div>
                            <div class="stat-item">
                                <div class="stat-number">${studentsWithDiscount}</div>
                                <div class="stat-label">–°–æ —Å–∫–∏–¥–∫–æ–π</div>
                            </div>
                        </div>
                    </div>
                    <h4>–°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ —Å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ (${studentsWithPaidSubscriptions.length}):</h4>
                    ${studentsWithPaidSubscriptions.map(student => `
                        <div class="student-item">
                            <div class="student-header">
                                <div class="student-name">${student.participant_name}</div>
                                <div class="student-phone">üì± ${student.parent_phone}</div>
                            </div>
                            <div class="student-info">
                                <div>üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${student.birth_date}</div>
                                ${student.medical_certificate ? '<div>üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞: ‚úÖ</div>' : '<div>üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞: ‚ùå</div>'}
                                ${student.discount_type ? `<div>üé´ –°–∫–∏–¥–∫–∞: ${student.discount_type} (${student.discount_percent}%)</div>` : ''}
                            </div>
                            <div class="student-financial">
                                <div class="financial-summary">
                                    <span>üí∞ –í—Å–µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–æ: ${student.total_paid_all} ‚ÇΩ</span>
                                    <span>üìö –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–π: <span class="balance-remaining ${getBalanceClass(student.total_remaining_all)}">${student.total_remaining_all}</span></span>
                                    <span>üìã –ü–æ–¥–ø–∏—Å–æ–∫: ${student.subscription_count}</span>
                                </div>
                                ${student.subscriptions.length > 0 ? `
                                    <div class="subscriptions-list">
                                        <h5>–ü–æ–¥–ø–∏—Å–∫–∏:</h5>
                                        ${student.subscriptions.map(sub => `
                                            <div class="subscription-item">
                                                <div class="subscription-header">
                                                    <div>üèÉ‚Äç‚ôÇÔ∏è ${sub.sport_group_name} ‚Äî ${sub.subscription_type}</div>
                                                    <button class="btn btn-danger btn-small" onclick="deleteSubscription(${sub.subscription_id}, '${student.participant_name}', '${sub.sport_group_name}')">üóëÔ∏è</button>
                                                </div>
                                                <div>üí∞ –û–ø–ª–∞—á–µ–Ω–æ: ${sub.total_paid} ‚ÇΩ | –û—Å—Ç–∞–ª–æ—Å—å: <span class="balance-remaining ${getBalanceClass(sub.remaining_lessons)}">${sub.remaining_lessons}</span></div>
                                                <div>üìÖ ${sub.start_date} ‚Äî ${sub.end_date}</div>
                                            </div>
                                        `).join('')}
                                    </div>
                                ` : '<div class="no-subscriptions">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫</div>'}
                            </div>
                        </div>
                    `).join('')}
                `;
            } else {
                studentsList.innerHTML = '<p>–£—á–µ–Ω–∏–∫–æ–≤ —Å –æ–ø–ª–∞—á–µ–Ω–Ω—ã–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –ø–æ–∫–∞ –Ω–µ—Ç</p>';
            }
        } else {
            studentsList.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤:', error);
        document.getElementById('studentsList').innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤</div>';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
async function loadContactData() {
    try {
        const response = await fetch('/api/parent/contact');
        const result = await response.json();
        
        const contactInfo = document.getElementById('contactInfo');
        if (result.success) {
            contactInfo.innerHTML = `
                <div>
                    <h4>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                    <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${result.contact_info.phone}</p>
                    <p><strong>Email:</strong> ${result.contact_info.email}</p>
                    <p><strong>–ê–¥—Ä–µ—Å:</strong> ${result.contact_info.address}</p>
                    
                    <div style="margin-top: 20px;">
                        <button class="btn" onclick="window.open('tel:${result.contact_info.phone}')">
                            üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å
                        </button>
                        <button class="btn btn-secondary" onclick="window.open('mailto:${result.contact_info.email}')">
                            ‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å email
                        </button>
                    </div>
                </div>
            `;
        } else {
            contactInfo.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:', error);
        document.getElementById('contactInfo').innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</div>';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–ø–ª–∞—Ç—ã
async function loadPaymentData() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    try {
        const response = await fetch('/api/auth/participants');
        const result = await response.json();
        
        const participantSelect = document.getElementById('paymentParticipant');
        participantSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞</option>';
        
        if (result.success && result.participants.length > 0) {
            result.participants.forEach(participant => {
                participantSelect.innerHTML += `<option value="${participant.id}">${participant.full_name}</option>`;
            });
        } else {
            participantSelect.innerHTML = '<option value="">–ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</option>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
        document.getElementById('paymentParticipant').innerHTML = '<option value="">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</option>';
    }
    
    const paymentGroupSelect = document.getElementById('paymentGroup');
    paymentGroupSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option>' +
        sportGroups.map(group => `<option value="${group.id}">${group.name}</option>`).join('');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    paymentGroupSelect.addEventListener('change', function() {
        const groupId = this.value;
        const subscriptionType = document.getElementById('subscriptionType').value;
        calculatePayment(groupId, subscriptionType);
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
    document.getElementById('subscriptionType').addEventListener('change', function() {
        const groupId = document.getElementById('paymentGroup').value;
        const subscriptionType = this.value;
        calculatePayment(groupId, subscriptionType);
    });
}

// –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–ø–ª–∞—Ç—ã
function calculatePayment(groupId, subscriptionType) {
    const group = sportGroups.find(g => g.id == groupId);
    if (!group) return;
    
    let amount = 0;
    switch (subscriptionType) {
        case '8 –∑–∞–Ω—è—Ç–∏–π':
            amount = group.price_8;
            break;
        case '12 –∑–∞–Ω—è—Ç–∏–π':
            amount = group.price_12;
            break;
        case '–†–∞–∑–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è':
            amount = group.price_single;
            break;
    }
    
    document.getElementById('paymentAmount').value = amount;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º
document.getElementById('participantForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = {
        full_name: document.getElementById('fullName').value,
        parent_phone: document.getElementById('parentPhone').value,
        birth_date: document.getElementById('birthDate').value,
        sport_group_id: parseInt(document.getElementById('participantGroup').value),
        medical_certificate: document.getElementById('medicalCertificate').checked,
        discount_type: document.getElementById('discountType').value,
        discount_percent: parseInt(document.getElementById('discountPercent').value) || 0
    };
    
    try {
        const response = await fetch('/api/admin/participants', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        if (result.success) {
            if (result.authorization_code) {
                showSuccess(`–£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${result.authorization_code}`);
            } else {
                showSuccess('–£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
            }
            this.reset();
            closeModal('participantsModal');
        } else {
            showError('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', error);
        showError('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞');
    }
});

document.getElementById('scheduleForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = {
        sport_group_id: parseInt(document.getElementById('scheduleGroup').value),
        day_of_week: parseInt(document.getElementById('dayOfWeek').value),
        start_time: document.getElementById('startTime').value,
        end_time: document.getElementById('endTime').value
    };
    
    try {
        const response = await fetch('/api/admin/schedule', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
            this.reset();
            loadScheduleData(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        } else {
            showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:', error);
        showError('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è');
    }
});

document.getElementById('paymentForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const participantId = document.getElementById('paymentParticipant').value;
    if (!participantId) {
        showError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞');
        return;
    }
    
    const formData = {
        participant_id: parseInt(participantId),
        sport_group_id: parseInt(document.getElementById('paymentGroup').value),
        subscription_type: document.getElementById('subscriptionType').value,
        total_lessons: getLessonsCount(document.getElementById('subscriptionType').value),
        amount: parseInt(document.getElementById('paymentAmount').value),
        payment_method: document.getElementById('paymentMethod').value
    };
    
    try {
        const response = await fetch('/api/parent/payment', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess(result.message || '–ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
            this.reset();
            closeModal('paymentModal');
        } else {
            showError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
        showError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    }
});

document.getElementById('transferForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = {
        subscription_id: 1, // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫
        original_date: document.getElementById('originalDate').value,
        new_date: document.getElementById('newDate').value,
        reason: document.getElementById('transferReason').value
    };
    
    try {
        const response = await fetch('/api/parent/transfer', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
            this.reset();
            closeModal('transferModal');
        } else {
            showError('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å:', error);
        showError('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–Ω–æ—Å');
    }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getDayName(dayOfWeek) {
    const days = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'];
    return days[dayOfWeek] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–µ–Ω—å';
}

function getLessonsCount(subscriptionType) {
    switch (subscriptionType) {
        case '8 –∑–∞–Ω—è—Ç–∏–π': return 8;
        case '12 –∑–∞–Ω—è—Ç–∏–π': return 12;
        case '–†–∞–∑–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è': return 1;
        default: return 1;
    }
}

function showSuccess(message) {
    tg.showAlert(message);
}

function showError(message) {
    tg.showAlert(message);
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ü–û–°–ï–©–ê–ï–ú–û–°–¢–ò =====

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
let currentAttendanceGroup = null;
let currentAttendanceDate = null;
let currentAttendanceId = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ (–∞–¥–º–∏–Ω)
async function loadAttendanceGroups() {
    try {
        const response = await fetch('/api/admin/attendance/groups');
        const result = await response.json();
        
        if (result.success) {
            renderAttendanceGroups(result.groups);
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä—É–ø–ø –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
function renderAttendanceGroups(groups) {
    const container = document.getElementById('attendanceContent');
    
    if (groups.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø</div>';
        return;
    }

    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <h4 style="margin-bottom: 12px; color: #ffffff;">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏:</h4>
        </div>
        ${groups.map(group => `
            <div class="attendance-group">
                <div onclick="selectAttendanceGroup(${group.id}, '${group.name}')" style="cursor: pointer;">
                    <h4 style="margin-bottom: 4px; color: #ffffff;">${group.name}</h4>
                    <p style="color: #9ca3af; font-size: 13px;">${group.description}</p>
                </div>
                <div style="margin-top: 8px;">
                    <button class="btn btn-secondary" onclick="loadAttendanceStats(${group.id})" style="font-size: 12px; padding: 6px 12px;">
                        üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                    </button>
                </div>
            </div>
        `).join('')}
    `;
}

// –í—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
async function selectAttendanceGroup(groupId, groupName) {
    currentAttendanceGroup = { id: groupId, name: groupName };
    
    try {
        const response = await fetch(`/api/admin/attendance/schedule/${groupId}`);
        const result = await response.json();
        
        if (result.success) {
            renderAttendanceDates(result.dates, groupName);
            closeModal('attendanceModal');
            showModal('attendanceDateModal');
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞—Ç –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
function renderAttendanceDates(dates, groupName) {
    const container = document.getElementById('attendanceDatesList');
    
    if (dates.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π</div>';
        return;
    }

    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <h4 style="margin-bottom: 8px; color: #ffffff;">${groupName}</h4>
            <p style="color: #9ca3af; font-size: 13px; margin-bottom: 12px;">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∑–∞–Ω—è—Ç–∏—è:</p>
        </div>
        ${dates.map(date => `
            <div class="attendance-date ${date.has_attendance ? (date.is_completed ? 'completed' : 'pending') : ''}" 
                 onclick="selectAttendanceDate('${date.date}', '${date.day_name} ${date.day_number} ${date.month} ${date.year}')">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <div style="font-weight: 600; color: #ffffff;">${date.day_name} ${date.day_number} ${date.month}</div>
                        <div style="font-size: 12px; color: #9ca3af;">${date.start_time} - ${date.end_time}</div>
                    </div>
                    <div style="font-size: 12px; color: #9ca3af;">
                        ${date.has_attendance ? (date.is_completed ? '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ' : '‚è≥ –û–∂–∏–¥–∞–µ—Ç') : 'üìù –ù–æ–≤–æ–µ'}
                    </div>
                </div>
            </div>
        `).join('')}
        <div style="margin-top: 20px;">
            <button class="btn btn-secondary" onclick="loadAttendanceStats(${currentAttendanceGroup.id})">
                üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä—É–ø–ø—ã
            </button>
        </div>
    `;
}

// –í—ã–±–æ—Ä –¥–∞—Ç—ã –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
async function selectAttendanceDate(date, dateDisplay) {
    currentAttendanceDate = { date: date, display: dateDisplay };
    
    try {
        const response = await fetch(`/api/admin/attendance/participants/${currentAttendanceGroup.id}/${date}`);
        const result = await response.json();
        
        if (result.success) {
            currentAttendanceId = result.attendance_id;
            renderAttendanceParticipants(result.participants, dateDisplay, result.is_completed);
            closeModal('attendanceDateModal');
            showModal('attendanceRecordModal');
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —É—á–µ—Ç–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
function renderAttendanceParticipants(participants, dateDisplay, isCompleted) {
    const container = document.getElementById('attendanceRecordContent');
    
    if (participants.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ</div>';
        return;
    }

    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <h4 style="margin-bottom: 8px; color: #ffffff;">${currentAttendanceGroup.name}</h4>
            <p style="color: #9ca3af; font-size: 13px; margin-bottom: 12px;">${dateDisplay}</p>
        </div>
        ${participants.map(participant => `
            <div class="participant-item" data-participant-id="${participant.id}">
                <div class="participant-info">
                    <div class="participant-name">${participant.full_name}</div>
                    <div class="participant-phone">${participant.parent_phone}</div>
                </div>
                <div class="attendance-controls">
                    <div class="attendance-toggle">
                        <div class="toggle-switch ${participant.is_present ? 'active' : ''}" 
                             onclick="toggleAttendance(${participant.id}, this)">
                        </div>
                        <span class="attendance-status ${participant.is_present ? 'present' : 'absent'}">
                            ${participant.is_present ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
                        </span>
                    </div>
                    <div class="absence-reason" style="display: ${participant.is_present ? 'none' : 'block'}; margin-top: 8px;">
                        <select class="reason-select" onchange="updateAbsenceReason(${participant.id}, this.value)">
                            <option value="unexcused">–ë–µ–∑ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã</option>
                            <option value="excused">–ü–æ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ</option>
                        </select>
                    </div>
                </div>
            </div>
        `).join('')}
        <div style="margin-top: 20px;">
            <button class="btn" onclick="saveAttendance()" ${isCompleted ? 'disabled' : ''}>
                ${isCompleted ? '–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å'}
            </button>
        </div>
    `;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
function toggleAttendance(participantId, element) {
    const toggle = element;
    const statusElement = toggle.nextElementSibling;
    const participantItem = toggle.closest('.participant-item');
    const absenceReason = participantItem.querySelector('.absence-reason');
    
    toggle.classList.toggle('active');
    const isPresent = toggle.classList.contains('active');
    
    statusElement.textContent = isPresent ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
    statusElement.className = `attendance-status ${isPresent ? 'present' : 'absent'}`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
    if (absenceReason) {
        absenceReason.style.display = isPresent ? 'none' : 'block';
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
function updateAbsenceReason(participantId, reason) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—á–∏–Ω—É –≤ data-–∞—Ç—Ä–∏–±—É—Ç–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    const participantItem = document.querySelector(`[data-participant-id="${participantId}"]`);
    if (participantItem) {
        participantItem.setAttribute('data-absence-reason', reason);
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
async function deleteSubscription(subscriptionId, participantName, groupName) {
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ${participantName} –≤ –≥—Ä—É–ø–ø–µ "${groupName}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
        return;
    }
    
    try {
        const response = await fetch(`/api/admin/subscription/${subscriptionId}/delete`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            if (currentAttendanceGroup) {
                showGroupStudents(currentAttendanceGroup.id, currentAttendanceGroup.name);
            } else {
                loadStudentsData();
            }
        } else {
            showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏');
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
async function saveAttendance() {
    const participants = [];
    const participantItems = document.querySelectorAll('.participant-item');
    
    participantItems.forEach(item => {
        const participantId = parseInt(item.querySelector('.toggle-switch').getAttribute('onclick').match(/\d+/)[0]);
        const isPresent = item.querySelector('.toggle-switch').classList.contains('active');
        const absenceReason = item.getAttribute('data-absence-reason') || 'unexcused';
        
        participants.push({
            id: participantId,
            is_present: isPresent,
            absence_reason: isPresent ? null : absenceReason
        });
    });
    
    try {
        const response = await fetch('/api/admin/attendance/save', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                attendance_id: currentAttendanceId,
                participants: participants
            })
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess('–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–æ–¥–∏—Ç–µ–ª—è–º.');
            closeModal('attendanceRecordModal');
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –¥–∞—Ç
            selectAttendanceGroup(currentAttendanceGroup.id, currentAttendanceGroup.name);
        } else {
            showError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏:', error);
        showError('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –≥—Ä—É–ø–ø—ã
async function loadAttendanceStats(groupId) {
    try {
        // –ï—Å–ª–∏ –º—ã –Ω–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã, –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
        if (!currentAttendanceGroup || currentAttendanceGroup.id !== groupId) {
            const groupResponse = await fetch('/api/admin/attendance/groups');
            const groupResult = await groupResponse.json();
            if (groupResult.success) {
                const group = groupResult.groups.find(g => g.id === groupId);
                if (group) {
                    currentAttendanceGroup = { id: groupId, name: group.name };
                }
            }
        }
        
        const response = await fetch(`/api/admin/attendance/stats/${groupId}`);
        const result = await response.json();
        
        if (result.success) {
            renderAttendanceStats(result.stats);
            closeModal('attendanceModal');
            closeModal('attendanceDateModal');
            showModal('attendanceStatsModal');
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
function renderAttendanceStats(stats) {
    const container = document.getElementById('attendanceStatsContent');
    
    if (stats.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏</div>';
        return;
    }

    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <button class="back-btn" onclick="closeModal('attendanceStatsModal'); showModal('attendanceModal');">
                ‚Üê –ù–∞–∑–∞–¥ –∫ –≥—Ä—É–ø–ø–∞–º
            </button>
            <h4 style="margin-bottom: 8px; color: #ffffff;">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏</h4>
            <p style="color: #9ca3af; font-size: 13px; margin-bottom: 12px;">${currentAttendanceGroup.name}</p>
        </div>
        ${stats.map(stat => {
            const percentageClass = stat.percentage >= 80 ? 'high' : stat.percentage >= 60 ? 'medium' : 'low';
            return `
                <div class="stats-item">
                    <div class="stats-header">
                        <div class="stats-date">${stat.day_name} ${new Date(stat.date).toLocaleDateString('ru-RU')}</div>
                        <div class="stats-percentage ${percentageClass}">${stat.percentage}%</div>
                    </div>
                    <div class="stats-details">
                        <span>–í—Å–µ–≥–æ: ${stat.total}</span>
                        <span>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–æ: ${stat.present}</span>
                        <span>–û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–æ: ${stat.absent}</span>
                    </div>
                </div>
            `;
        }).join('')}
    `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
async function loadParentAttendance() {
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const response = await fetch('/api/participants');
        const result = await response.json();
        
        if (result.success && result.participants.length > 0) {
            renderParentAttendanceParticipants(result.participants);
        } else {
            document.getElementById('parentAttendanceContent').innerHTML = 
                '<div class="error">–£ –≤–∞—Å –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–¥–∏—Ç–µ–ª—è:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
function renderParentAttendanceParticipants(participants) {
    const container = document.getElementById('parentAttendanceContent');
    
    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <h4 style="margin-bottom: 8px; color: #ffffff;">–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏:</h4>
        </div>
        ${participants.map(participant => `
            <div class="attendance-group" onclick="loadParticipantAttendance(${participant.id}, '${participant.full_name}')">
                <h4 style="margin-bottom: 4px; color: #ffffff;">${participant.full_name}</h4>
                <p style="color: #9ca3af; font-size: 13px;">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏</p>
            </div>
        `).join('')}
    `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
async function loadParticipantAttendance(participantId, participantName) {
    try {
        const response = await fetch(`/api/parent/attendance/${participantId}`);
        const result = await response.json();
        
        if (result.success) {
            renderParticipantAttendance(result.stats, participantName);
            closeModal('parentAttendanceModal');
            showModal('attendanceStatsModal');
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
function renderParticipantAttendance(stats, participantName) {
    const container = document.getElementById('attendanceStatsContent');
    
    if (stats.length === 0) {
        container.innerHTML = '<div class="error">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏</div>';
        return;
    }

    container.innerHTML = `
        <div style="margin-bottom: 16px;">
            <button class="back-btn" onclick="closeModal('attendanceStatsModal'); showModal('parentAttendanceModal');">
                ‚Üê –ù–∞–∑–∞–¥ –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
            </button>
            <h4 style="margin-bottom: 8px; color: #ffffff;">–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å</h4>
            <p style="color: #9ca3af; font-size: 13px; margin-bottom: 12px;">${participantName}</p>
        </div>
        ${stats.map(stat => `
            <div class="stats-item">
                <div class="stats-header">
                    <div class="stats-date">${stat.day_name} ${new Date(stat.date).toLocaleDateString('ru-RU')}</div>
                    <div class="attendance-status ${stat.is_present ? 'present' : 'absent'}">
                        ${stat.is_present ? '‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª'}
                    </div>
                </div>
                <div class="stats-details">
                    <span>–ì—Ä—É–ø–ø–∞: ${stat.sport_group}</span>
                    <span>–í—Ä–µ–º—è: ${stat.start_time} - ${stat.end_time}</span>
                </div>
            </div>
        `).join('')}
    `;
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò =====

// –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
async function loadAuthorizedParticipants() {
    try {
        const response = await fetch('/api/auth/participants');
        const result = await response.json();
        
        const container = document.getElementById('authorizedParticipants');
        if (result.success) {
            if (result.participants.length > 0) {
                container.innerHTML = `
                    <h4 style="margin-bottom: 8px; color: #ffffff;">–í–∞—à–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</h4>
                    ${result.participants.map(participant => `
                        <div class="authorized-participant">
                            <h5>${participant.full_name}</h5>
                            <p>–¢–µ–ª–µ—Ñ–æ–Ω: ${participant.parent_phone}</p>
                            <p>–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${participant.authorized_at}</p>
                        </div>
                    `).join('')}
                `;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
                showAuthorizedButtons();
            } else {
                container.innerHTML = `
                    <h4 style="margin-bottom: 8px; color: #ffffff;">–í–∞—à–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:</h4>
                    <p style="color: #9ca3af;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                `;
                
                // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
                hideAuthorizedButtons();
            }
        } else {
            container.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
        document.getElementById('authorizedParticipants').innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>';
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function showAuthorizedButtons() {
    const paymentBtn = document.getElementById('paymentBtn');
    const attendanceBtn = document.getElementById('attendanceBtn');
    const transferBtn = document.getElementById('transferBtn');
    
    if (paymentBtn) paymentBtn.style.display = 'inline-block';
    if (attendanceBtn) attendanceBtn.style.display = 'inline-block';
    if (transferBtn) transferBtn.style.display = 'inline-block';
}

// –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function hideAuthorizedButtons() {
    const paymentBtn = document.getElementById('paymentBtn');
    const attendanceBtn = document.getElementById('attendanceBtn');
    const transferBtn = document.getElementById('transferBtn');
    
    if (paymentBtn) paymentBtn.style.display = 'none';
    if (attendanceBtn) attendanceBtn.style.display = 'none';
    if (transferBtn) transferBtn.style.display = 'none';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
document.getElementById('authorizationForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const code = document.getElementById('authCode').value.trim();
    
    if (code.length !== 6) {
        showError('–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 6 —Ü–∏—Ñ—Ä');
        return;
    }
    
    try {
        const response = await fetch('/api/auth/verify', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ code: code })
        });
        
        const result = await response.json();
        if (result.success) {
            showSuccess(result.message);
            this.reset();
            loadAuthorizedParticipants(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        } else {
            showError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        showError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function checkAuthorization() {
    try {
        const response = await fetch('/api/auth/participants');
        const result = await response.json();
        
        if (result.success && result.participants.length > 0) {
            showAuthorizedButtons();
        } else {
            hideAuthorizedButtons();
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        hideAuthorizedButtons();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä—É–ø–ø –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
function loadParticipantGroups() {
    const participantGroupSelect = document.getElementById('participantGroup');
    if (participantGroupSelect && sportGroups.length > 0) {
        participantGroupSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option>' +
            sportGroups.map(group => `<option value="${group.id}">${group.name}</option>`).join('');
    }
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –£–ß–ï–¢–ê –§–ò–ù–ê–ù–°–û–í =====

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
async function loadFinancialInfo() {
    try {
        const response = await fetch('/api/parent/financial-info');
        const result = await response.json();
        
        const container = document.getElementById('financialInfo');
        if (result.success) {
            if (result.financial_data.length > 0) {
                container.innerHTML = `
                    <h4 style="margin-bottom: 12px; color: #ffffff;">–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                    ${result.financial_data.map(participant => `
                        <div class="financial-info">
                            <div class="financial-header">
                                <div class="participant-name">${participant.participant_name}</div>
                            </div>
                            ${participant.subscriptions.map(subscription => `
                                <div class="balance-info">
                                    <span>–ì—Ä—É–ø–ø–∞: ${subscription.sport_group_name}</span>
                                    <span>–¢–∏–ø: ${subscription.subscription_type}</span>
                                    <span>–û—Å—Ç–∞–ª–æ—Å—å: <span class="balance-remaining ${getBalanceClass(subscription.remaining_lessons)}">${subscription.remaining_lessons}</span></span>
                                    <span>–û–ø–ª–∞—á–µ–Ω–æ: ${subscription.total_paid} ‚ÇΩ</span>
                                </div>
                            `).join('')}
                        </div>
                    `).join('')}
                `;
            } else {
                container.innerHTML = `
                    <h4 style="margin-bottom: 12px; color: #ffffff;">–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                    <p style="color: #9ca3af;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö</p>
                `;
            }
        } else {
            container.innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</div>';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
        document.getElementById('financialInfo').innerHTML = '<div class="error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</div>';
    }
}

// –ü–æ–ª—É—á–∏—Ç—å CSS –∫–ª–∞—Å—Å –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
function getBalanceClass(remaining) {
    if (remaining <= 1) return 'low';
    if (remaining <= 3) return 'medium';
    return 'high';
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∏–∑–∫–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
async function checkLowBalance() {
    try {
        const response = await fetch('/api/admin/check-low-balance');
        const result = await response.json();
        
        if (result.success) {
            showSuccess(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${result.notifications_sent} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ù–∞–π–¥–µ–Ω–æ ${result.low_balance_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –Ω–∏–∑–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º.`);
        } else {
            showError('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤: ' + result.error);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤:', error);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–æ–≤');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
async function loadGroupParticipants(groupId) {
    try {
        const response = await fetch(`/api/admin/group/${groupId}/participants`);
        const result = await response.json();
        
        if (result.success) {
            return result.participants;
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã: ' + result.error);
            return [];
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã:', error);
        showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã');
        return [];
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é openGroupDetails –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
async function openGroupDetails(groupId) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
        const participants = await loadGroupParticipants(groupId);
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥—Ä—É–ø–ø–µ
        window.location.href = `/group/${groupId}?id=${groupId}`;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ localStorage –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≥—Ä—É–ø–ø—ã
        localStorage.setItem('groupParticipants', JSON.stringify(participants));
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø—ã:', error);
        window.location.href = `/group/${groupId}?id=${groupId}`;
    }
}
